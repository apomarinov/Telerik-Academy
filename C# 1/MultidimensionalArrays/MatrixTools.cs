// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

namespace MatrixTools
{
	public static class Matrix
	{
		public static void Print (int[,] m, int[] paintStart = null, int[] paintEnd = null)
		{
			int rowLength = m.GetLength (0);
			int colLength = m.GetLength (1);
			int maxNumberLength = m.Cast<int> ().Max ().ToString ().Length;
			string elStr;
			
			bool paint = paintStart != null && paintEnd != null;
			
			for (int i = 0; i < rowLength; i++) {
				Console.Write ("{");
				for (int j = 0; j < colLength; j++) {
					elStr = m [i, j].ToString ().PadRight (maxNumberLength, ' ');
					if (paint && paintStart [0] <= i && paintEnd [1] >= j && paintStart [1] >= i && paintEnd [0] <= j) {
						Console.ForegroundColor = ConsoleColor.Red;
					}
					Console.Write (elStr + (j != colLength - 1 ? "  " : ""));
					Console.ResetColor ();
				}
				Console.Write ("}\n");
			}	
		}
		
		public static int Sum (int[,] m)
		{
			int rowLength = m.GetLength (0);
			int colLength = m.GetLength (1);
			int sum = 0;
			
			for (int i = 0; i < rowLength; i++) {
				for (int j = 0; j < colLength; j++) {
					sum += m [i, j];
				}
			}
			
			return sum;
		}
	}
}













